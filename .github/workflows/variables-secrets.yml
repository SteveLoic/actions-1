name: Exploring Variables and Secrets
on:
  # schedule:
    # - cron: "*/1 * * * *"
  #push:
  workflow_dispatch:
env:
  CONTAINER_REGISTRY: docker.io
  IMAGE_NAME: github-actions-nginx
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Build
        run: echo docker build -t {{env.CONTAINER_REGISTRY}}/${{vars.DOCKER_USERNAME}}/$IMAGE_NAME:latest
      - name: Docker Login
        run: echo docker login --username=${{vars.DOCKER_USERNAME}} --password=${{secrets.DOCKER_PASSWORD}}
      - name: Docker Publish
        run: echo docker push $CONTAINER_REGISTRY/${{vars.DOCKER_USERNAME}}/$IMAGE_NAME:latest

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: docker
    concurrency: 
      group: production-deployment
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - name: Docker run
        # timeout-minutes: 1
        run: |
         echo docker run -d -p 8080:80 docker.io/${{vars.DOCKER_USERNAME}}/$IMAGE_NAME:latest
         sleep 600s

## environment variable are define at the job level ###
# jobs:
#   docker:
#     env:
#       CONTAINER_REGISTRY: docker.io
#       DOCKER_USERNAME: stevedev
#       IMAGE_NAME: github-actions-nginx
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker Build
#         run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
#       - name: Docker Login
#         env:
#           DOCKER_PASSWORD: password
#         run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
#       - name: Docker Publish
#         run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
#   deploy:
#     env: 
#       CONTAINER_REGISTRY: docker.io
#       DOCKER_USERNAME: stevedev
#       IMAGE_NAME: github-actions-nginx
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker run
#         run: echo docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest
   


## environment variable are define at the steps level
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Docker Build
  #       env:
  #         CONTAINER_REGISTRY: docker.io
  #         DOCKER_USERNAME: stevedev
  #         IMAGE_NAME: github-actions-nginx
  #       run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
  #     - name: Docker Login
  #       env:
  #         DOCKER_USERNAME: steve
  #         DOCKER_PASSWORD: password
  #       run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
      
  #     - name: Docker Publish
  #       env:
  #         CONTAINER_REGISTRY: docker.io
  #         DOCKER_USERNAME: stevedev
  #         IMAGE_NAME: github-actions-nginx
  #       run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

  # deploy:
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy app
  #       run: echo deploying...
          
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Docker Build
  #       run: docker build -t docker.io/dockerUsername/imageName:latest
      
  #     - name: Docker Login
  #       run: docker login --username=username --password=password

  #     - name: Docker Publish
  #       run: docker push build -t docker.io/dockerUsername/imageName:latest
  
  # deploy:
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Docker run
  #       run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest